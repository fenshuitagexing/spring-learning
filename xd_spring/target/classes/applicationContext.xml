<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd"
       xmlns:aop="http://www.springframework.org/schema/aop">


    <!--  Setter Injection -->
    <!--  class: no-arg constructor of Video class is required -->
    <!--  create an instance of Video class through no-arg constructor, -->
    <!--  then invoke the setter to inject the title attribute  -->
    <bean id="videoId" class="net.xdclass.spring.domain.Video" init-method="init" destroy-method="destroy">
        <property name="id" value="9"/>
        <property name="title" value="Spring 5.x"/>
    </bean>

<!--    <bean id="videoDplId" class="net.xdclass.spring.domain.VideoDpl" parent="videoId">-->
<!--        <property name="summary" value="summary content"/>-->
<!--    </bean>-->

    <bean class="net.xdclass.spring.processor.CustomBeanPostProcessor" />
    <bean class="net.xdclass.spring.processor.CustomBeanPostProcessorA" />

    <!--  Constructor Injection -->
    <!--  class:  one-arg(title) constructor of Video class is required -->
<!--    <bean id="videoId" class="net.xdclass.spring.domain.Video" scope="singleton">-->
<!--        <constructor-arg name="title" value="专题第一季" />-->
<!--    </bean>-->


<!--    <bean id="videoId" class="net.xdclass.spring.domain.Video">-->
<!--        &lt;!&ndash;    List type injection    &ndash;&gt;-->
<!--        <property name="chapterList">-->
<!--            <list>-->
<!--                <value>Chapter 1 Spring Boot</value>-->
<!--                <value>Chapter 2 Mybatis</value>-->
<!--                <value>Chapter 3 Spring</value>-->
<!--            </list>-->
<!--        </property>-->

<!--        <property name="videoMap">-->
<!--            <map>-->
<!--                <entry key="1" value="Spring Cloud course"></entry>-->
<!--                <entry key="2" value="Spring Data course"></entry>-->
<!--                <entry key="3" value="Spring JPA course"></entry>-->
<!--            </map>-->
<!--        </property>-->

<!--    </bean>-->

    <!--  VideoOrder所依赖的Video对象，也是通过Video类的set方法注入  -->
    <!--  Instantiation of Video is set to perform before VideoOrder through depends-on  -->
<!--    <bean id="videoOrderId" class="net.xdclass.spring.domain.VideoOrder" depends-on="videoId">-->
<!--        <property name="id" value="8" />-->
<!--        <property name="orderNumber" value="25956562389" />-->
<!--        &lt;!&ndash;   dependency injection     &ndash;&gt;-->
<!--        <property name="video" ref="videoId" />-->
<!--    </bean>-->
<!--    <bean id="videoOrderId" class="net.xdclass.spring.domain.VideoOrder" autowire="byType">-->
<!--        <property name="id" value="8" />-->
<!--        <property name="orderNumber" value="25956562389" />-->
<!--    </bean>-->


    <!--  横切关注点  -->
    <bean id="timeHandler" class="net.xdclass.spring.aop.TimeHandler" />

    <bean id="videoService" class="net.xdclass.spring.service.VideoServiceImpl"/>

    <aop:config>

        <!--  横切关注点  -->
        <aop:aspect id="timeAspect" ref="timeHandler">

            <!--     定义切入点表达式       -->
            <aop:pointcut id="allMethodsPrintLog" expression="execution(* net.xdclass.spring.service.VideoService.*(..))"></aop:pointcut>

            <!--     配置前置通知和后置通知       -->
            <aop:before method="printBefore" pointcut-ref="allMethodsPrintLog" />
            <aop:after method="printAfter" pointcut-ref="allMethodsPrintLog"/>

        </aop:aspect>
    </aop:config>
</beans>